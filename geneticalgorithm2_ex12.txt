# https://pypi.org/project/geneticalgorithm2

import numpy as np
from geneticalgorithm2 import geneticalgorithm2 as ga
import time


def f(x):
    import math
    a = x[0]
    b = x[1]
    c = x[2]
    s = 0
    for i in range(10000):
        s += math.sin(a*i) + math.sin(b*i) + math.cos(c*i)

    return float(s)


algorithm_param = {'max_num_iteration': 50,
                   'population_size': 100,
                   'mutation_probability': 0.1,
                   'elit_ratio': 0.01,
                   'crossover_probability': 0.5,
                   'parents_portion': 0.3,
                   'crossover_type': 'uniform',
                   'mutation_type': 'uniform_by_center',
                   'selection_type': 'roulette',
                   'max_iteration_without_improv': None}

var_bound = np.array([[-10, 10]]*3)

model = ga(
    function=f,
    dimension=3,
    variable_type='real',
    variable_boundaries=var_bound,
    algorithm_parameters=algorithm_param
)


# %time model.run()
# Wall time: 1min 52s
start_time = int(time.time())
model.run()
end_time = int(time.time()) - start_time
print('Standard time: {} seconds'.format(end_time))

# %time model.run(set_function= ga.set_function_multiprocess(f, n_jobs=6))
# Wall time: 31.7 s
start_time = int(time.time())
model.run(set_function=ga.set_function_multiprocess(f, n_jobs=-1))  # n_jobs=6
end_time = int(time.time()) - start_time
print('Parallel time: {} seconds'.format(end_time))
